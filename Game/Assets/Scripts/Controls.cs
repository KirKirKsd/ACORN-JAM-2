//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.4.4
//     from Assets/Input/Controls.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @Controls : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @Controls()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""Controls"",
    ""maps"": [
        {
            ""name"": ""Player"",
            ""id"": ""a45d56ce-a503-4a94-b8ab-6a29c5ed4a86"",
            ""actions"": [
                {
                    ""name"": ""Movement"",
                    ""type"": ""Value"",
                    ""id"": ""587c1043-8a29-41f7-b85a-046ed44dba48"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Jump"",
                    ""type"": ""Button"",
                    ""id"": ""d1389b0f-3d05-49ad-9911-5b82d80403cd"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Shoot"",
                    ""type"": ""Button"",
                    ""id"": ""f5f0f261-7f4e-4de4-8668-9d78c5eda3b3"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ChangeWeaponTo1"",
                    ""type"": ""Button"",
                    ""id"": ""009a6fb4-bfa2-4b06-aa50-d5209b6fca33"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ChangeWeaponTo2"",
                    ""type"": ""Button"",
                    ""id"": ""1be8748b-efe0-4f27-9d64-a36eedfe5c16"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ChangeWeaponTo3"",
                    ""type"": ""Button"",
                    ""id"": ""1850d717-17d1-48e8-817b-a1bfb2b62f36"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ChangeWeaponMinus"",
                    ""type"": ""Button"",
                    ""id"": ""d4f7166e-106a-4132-a781-58dd6bae925c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ChangeWeaponPlus"",
                    ""type"": ""Button"",
                    ""id"": ""5f31d31c-691d-489e-9548-a3e19d74854c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ChangeWeapon"",
                    ""type"": ""Value"",
                    ""id"": ""99b5f961-23e9-4fbc-8a56-61903d28ade2"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""LeftStick"",
                    ""id"": ""8b542b8f-72c2-4a9d-9cd6-e621a017268c"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""01da7a31-4707-4a05-bf72-95f0152137bc"",
                    ""path"": ""<Gamepad>/leftStick/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""de94188d-eaad-42c1-8622-57863cb86f9a"",
                    ""path"": ""<Gamepad>/leftStick/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""AD"",
                    ""id"": ""45c22b8d-afa4-4524-9483-8a2a67bb8005"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""e785a57e-8b0e-44fe-9b58-4744b2f22865"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""5e6160e6-45de-49a0-b7f2-ad3b2b263e5d"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Arrows"",
                    ""id"": ""3b7ea7a3-4dc3-477e-8764-2f6e81743fb7"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""ec108459-da1a-46a2-affd-02b25b28334e"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""01bba347-724f-47fe-8353-84cd10d73a3d"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""e5b071ca-deff-41ea-82e0-288f27449c1d"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a567acdb-d0d2-496d-8dd1-1ea8c4f17bf2"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""834a029a-cc93-45a1-9f07-7dcca6e2e1eb"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""952d0a90-143d-4030-9dd4-35de5bad8f42"",
                    ""path"": ""<Gamepad>/rightTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Shoot"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""fad69ead-69ca-45c2-a13f-1eed5b474af2"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Shoot"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""37f1e6fe-4c0a-4145-9ef0-e8e22ee9f8e1"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Shoot"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""57d4e78c-ccc9-4ad4-815e-6066dc45110a"",
                    ""path"": ""<Keyboard>/1"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ChangeWeaponTo1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9a07c238-00b4-451f-a566-8a888288aaa6"",
                    ""path"": ""<Keyboard>/2"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ChangeWeaponTo2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b930b456-b21c-46d7-afc5-1d7d3f9f280f"",
                    ""path"": ""<Keyboard>/3"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ChangeWeaponTo3"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8909fa67-0965-44f4-b068-157c49313d7b"",
                    ""path"": ""<Gamepad>/leftShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ChangeWeaponMinus"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6064e5f2-b989-47e9-9637-516279c5b516"",
                    ""path"": ""<Gamepad>/rightShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ChangeWeaponPlus"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0a8b7337-8160-41a1-992c-02c7edfeefbd"",
                    ""path"": ""<Mouse>/scroll/y/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ChangeWeapon"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""UFO"",
            ""id"": ""ede7fdf0-09cf-49a5-99df-ff992a0852ff"",
            ""actions"": [
                {
                    ""name"": ""Movement"",
                    ""type"": ""Value"",
                    ""id"": ""90c5908b-a3cd-4b67-8e9a-959e3668576a"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""24f25d05-98f9-4561-92cd-780d58999932"",
                    ""path"": ""<Gamepad>/leftStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""WASD"",
                    ""id"": ""f1e676c9-12ae-4d39-ba5c-bcb90f475782"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""d8af6a35-95e3-43d6-9f34-4205b6b2a09c"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""d26b8b57-2547-459d-b4bc-ed6021fb7912"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""d280bd79-e09f-472a-bdaf-ca4fd55a9139"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""45d47f90-d257-4297-8b19-62820878ffcf"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Arrows"",
                    ""id"": ""e1b34f83-ab01-4956-ac96-2a4c4615d83c"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""dd6c6a1e-d9cb-4f86-a268-af8bdfb39995"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""b43059c4-1ff7-4f81-a84d-3c2963cc2e11"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""23030ce9-afc0-4c39-91ed-ca1e13381f84"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""c1b52a3a-1e7f-454e-933b-33a0b19a46c9"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // Player
        m_Player = asset.FindActionMap("Player", throwIfNotFound: true);
        m_Player_Movement = m_Player.FindAction("Movement", throwIfNotFound: true);
        m_Player_Jump = m_Player.FindAction("Jump", throwIfNotFound: true);
        m_Player_Shoot = m_Player.FindAction("Shoot", throwIfNotFound: true);
        m_Player_ChangeWeaponTo1 = m_Player.FindAction("ChangeWeaponTo1", throwIfNotFound: true);
        m_Player_ChangeWeaponTo2 = m_Player.FindAction("ChangeWeaponTo2", throwIfNotFound: true);
        m_Player_ChangeWeaponTo3 = m_Player.FindAction("ChangeWeaponTo3", throwIfNotFound: true);
        m_Player_ChangeWeaponMinus = m_Player.FindAction("ChangeWeaponMinus", throwIfNotFound: true);
        m_Player_ChangeWeaponPlus = m_Player.FindAction("ChangeWeaponPlus", throwIfNotFound: true);
        m_Player_ChangeWeapon = m_Player.FindAction("ChangeWeapon", throwIfNotFound: true);
        // UFO
        m_UFO = asset.FindActionMap("UFO", throwIfNotFound: true);
        m_UFO_Movement = m_UFO.FindAction("Movement", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Player
    private readonly InputActionMap m_Player;
    private IPlayerActions m_PlayerActionsCallbackInterface;
    private readonly InputAction m_Player_Movement;
    private readonly InputAction m_Player_Jump;
    private readonly InputAction m_Player_Shoot;
    private readonly InputAction m_Player_ChangeWeaponTo1;
    private readonly InputAction m_Player_ChangeWeaponTo2;
    private readonly InputAction m_Player_ChangeWeaponTo3;
    private readonly InputAction m_Player_ChangeWeaponMinus;
    private readonly InputAction m_Player_ChangeWeaponPlus;
    private readonly InputAction m_Player_ChangeWeapon;
    public struct PlayerActions
    {
        private @Controls m_Wrapper;
        public PlayerActions(@Controls wrapper) { m_Wrapper = wrapper; }
        public InputAction @Movement => m_Wrapper.m_Player_Movement;
        public InputAction @Jump => m_Wrapper.m_Player_Jump;
        public InputAction @Shoot => m_Wrapper.m_Player_Shoot;
        public InputAction @ChangeWeaponTo1 => m_Wrapper.m_Player_ChangeWeaponTo1;
        public InputAction @ChangeWeaponTo2 => m_Wrapper.m_Player_ChangeWeaponTo2;
        public InputAction @ChangeWeaponTo3 => m_Wrapper.m_Player_ChangeWeaponTo3;
        public InputAction @ChangeWeaponMinus => m_Wrapper.m_Player_ChangeWeaponMinus;
        public InputAction @ChangeWeaponPlus => m_Wrapper.m_Player_ChangeWeaponPlus;
        public InputAction @ChangeWeapon => m_Wrapper.m_Player_ChangeWeapon;
        public InputActionMap Get() { return m_Wrapper.m_Player; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PlayerActions set) { return set.Get(); }
        public void SetCallbacks(IPlayerActions instance)
        {
            if (m_Wrapper.m_PlayerActionsCallbackInterface != null)
            {
                @Movement.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnMovement;
                @Movement.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnMovement;
                @Movement.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnMovement;
                @Jump.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnJump;
                @Jump.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnJump;
                @Jump.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnJump;
                @Shoot.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnShoot;
                @Shoot.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnShoot;
                @Shoot.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnShoot;
                @ChangeWeaponTo1.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnChangeWeaponTo1;
                @ChangeWeaponTo1.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnChangeWeaponTo1;
                @ChangeWeaponTo1.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnChangeWeaponTo1;
                @ChangeWeaponTo2.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnChangeWeaponTo2;
                @ChangeWeaponTo2.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnChangeWeaponTo2;
                @ChangeWeaponTo2.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnChangeWeaponTo2;
                @ChangeWeaponTo3.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnChangeWeaponTo3;
                @ChangeWeaponTo3.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnChangeWeaponTo3;
                @ChangeWeaponTo3.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnChangeWeaponTo3;
                @ChangeWeaponMinus.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnChangeWeaponMinus;
                @ChangeWeaponMinus.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnChangeWeaponMinus;
                @ChangeWeaponMinus.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnChangeWeaponMinus;
                @ChangeWeaponPlus.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnChangeWeaponPlus;
                @ChangeWeaponPlus.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnChangeWeaponPlus;
                @ChangeWeaponPlus.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnChangeWeaponPlus;
                @ChangeWeapon.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnChangeWeapon;
                @ChangeWeapon.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnChangeWeapon;
                @ChangeWeapon.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnChangeWeapon;
            }
            m_Wrapper.m_PlayerActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Movement.started += instance.OnMovement;
                @Movement.performed += instance.OnMovement;
                @Movement.canceled += instance.OnMovement;
                @Jump.started += instance.OnJump;
                @Jump.performed += instance.OnJump;
                @Jump.canceled += instance.OnJump;
                @Shoot.started += instance.OnShoot;
                @Shoot.performed += instance.OnShoot;
                @Shoot.canceled += instance.OnShoot;
                @ChangeWeaponTo1.started += instance.OnChangeWeaponTo1;
                @ChangeWeaponTo1.performed += instance.OnChangeWeaponTo1;
                @ChangeWeaponTo1.canceled += instance.OnChangeWeaponTo1;
                @ChangeWeaponTo2.started += instance.OnChangeWeaponTo2;
                @ChangeWeaponTo2.performed += instance.OnChangeWeaponTo2;
                @ChangeWeaponTo2.canceled += instance.OnChangeWeaponTo2;
                @ChangeWeaponTo3.started += instance.OnChangeWeaponTo3;
                @ChangeWeaponTo3.performed += instance.OnChangeWeaponTo3;
                @ChangeWeaponTo3.canceled += instance.OnChangeWeaponTo3;
                @ChangeWeaponMinus.started += instance.OnChangeWeaponMinus;
                @ChangeWeaponMinus.performed += instance.OnChangeWeaponMinus;
                @ChangeWeaponMinus.canceled += instance.OnChangeWeaponMinus;
                @ChangeWeaponPlus.started += instance.OnChangeWeaponPlus;
                @ChangeWeaponPlus.performed += instance.OnChangeWeaponPlus;
                @ChangeWeaponPlus.canceled += instance.OnChangeWeaponPlus;
                @ChangeWeapon.started += instance.OnChangeWeapon;
                @ChangeWeapon.performed += instance.OnChangeWeapon;
                @ChangeWeapon.canceled += instance.OnChangeWeapon;
            }
        }
    }
    public PlayerActions @Player => new PlayerActions(this);

    // UFO
    private readonly InputActionMap m_UFO;
    private IUFOActions m_UFOActionsCallbackInterface;
    private readonly InputAction m_UFO_Movement;
    public struct UFOActions
    {
        private @Controls m_Wrapper;
        public UFOActions(@Controls wrapper) { m_Wrapper = wrapper; }
        public InputAction @Movement => m_Wrapper.m_UFO_Movement;
        public InputActionMap Get() { return m_Wrapper.m_UFO; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(UFOActions set) { return set.Get(); }
        public void SetCallbacks(IUFOActions instance)
        {
            if (m_Wrapper.m_UFOActionsCallbackInterface != null)
            {
                @Movement.started -= m_Wrapper.m_UFOActionsCallbackInterface.OnMovement;
                @Movement.performed -= m_Wrapper.m_UFOActionsCallbackInterface.OnMovement;
                @Movement.canceled -= m_Wrapper.m_UFOActionsCallbackInterface.OnMovement;
            }
            m_Wrapper.m_UFOActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Movement.started += instance.OnMovement;
                @Movement.performed += instance.OnMovement;
                @Movement.canceled += instance.OnMovement;
            }
        }
    }
    public UFOActions @UFO => new UFOActions(this);
    public interface IPlayerActions
    {
        void OnMovement(InputAction.CallbackContext context);
        void OnJump(InputAction.CallbackContext context);
        void OnShoot(InputAction.CallbackContext context);
        void OnChangeWeaponTo1(InputAction.CallbackContext context);
        void OnChangeWeaponTo2(InputAction.CallbackContext context);
        void OnChangeWeaponTo3(InputAction.CallbackContext context);
        void OnChangeWeaponMinus(InputAction.CallbackContext context);
        void OnChangeWeaponPlus(InputAction.CallbackContext context);
        void OnChangeWeapon(InputAction.CallbackContext context);
    }
    public interface IUFOActions
    {
        void OnMovement(InputAction.CallbackContext context);
    }
}
